{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helpers.js","App.js","index.js"],"names":["style","background","border","fontSize","fontWeight","cursor","outline","Square","value","onClick","borderRadius","width","height","display","gridTemplate","Board","squares","map","square","i","statusStyles","margin","flexDirection","alignItems","containerStyles","Game","useState","Array","fill","board","setBoard","xIsNext","setXisNext","winner","lines","length","a","b","c","includes","calculateWinner","boardCopy","App","ReactDOM","render","document","getElementById"],"mappings":"sLAEMA,EAAQ,CACVC,WAAY,YACZC,OAAQ,kBACRC,SAAU,OACVC,WAAY,MACZC,OAAQ,UACRC,QAAS,QASEC,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAAV,OACX,wBAAQT,MAAOA,EAAOS,QAASA,EAA/B,SACKD,KCVHR,EAAQ,CACVE,OAAQ,kBACRQ,aAAc,OACdC,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,aAAc,mCAUHC,EARD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASP,EAAZ,EAAYA,QAAZ,OACV,qBAAKT,MAAOA,EAAZ,SACKgB,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACT,cAAC,EAAD,CAAgBX,MAAOU,EAAQT,QAAS,kBAAMA,EAAQU,KAAzCA,SCVzB,IAAMC,EAAe,CACjBT,MAAO,QACPU,OAAQ,YACRR,QAAS,OACTS,cAAe,SACfC,WAAY,UAGVC,EAAkB,CACpBD,WAAY,SACZV,QAAS,OACTS,cAAe,UAkCJG,EA/BF,WACT,MAA0BC,mBAASC,MAAM,GAAGC,KAAK,OAAjD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACMC,ECrBH,SAAyBjB,GAW5B,IAVA,IAAMkB,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFf,EAAI,EAAGA,EAAIe,EAAMC,OAAQhB,IAAK,CACnC,kBAAkBe,EAAMf,GAAxB,GAAOiB,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAItB,EAAQoB,IAAMpB,EAAQoB,KAAOpB,EAAQqB,IAAMrB,EAAQoB,KAAOpB,EAAQsB,GAClE,OAAOtB,EAAQoB,GAEnB,IAAKpB,EAAQuB,SAAS,MAClB,MAAO,OAGf,OAAO,KDCQC,CAAgBX,GAkB/B,OACI,sBAAK7B,MAAOwB,EAAZ,UACI,cAAC,EAAD,CAAOR,QAASa,EAAOpB,QAlBX,SAAAU,GAChB,IAAMsB,EAAS,YAAOZ,GAElBI,GAAUQ,EAAUtB,KAExBsB,EAAUtB,GAAKY,EAAU,IAAM,IAC/BD,EAASW,GACTT,GAAYD,OAYR,sBAAK/B,MAAOoB,EAAZ,UACI,4BAAIa,EAAS,WAAaA,EAAS,WAAaF,EAAU,IAAM,KAAO,WACtEE,EAVT,wBAAQxB,QAAS,kBAAMqB,EAASH,MAAM,GAAGC,KAAK,QAA9C,wBAUkC,UExC3Bc,EAFH,kBAAM,cAAC,EAAD,KCElBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.baa44101.chunk.js","sourcesContent":["import React from 'react';\n\nconst style = {\n    background: 'lightblue',\n    border: '2px solid green',\n    fontSize: '30px',\n    fontWeight: '800',\n    cursor: 'pointer',\n    outline: 'none'\n};\n\nconst Square = ({ value, onClick }) => (\n    <button style={style} onClick={onClick}>\n        {value}\n    </button>\n);\n\nexport default Square;","import React from 'react';\nimport Square from './Square';\n\nconst style = {\n    border: '4px solid green',\n    borderRadius: '10px',\n    width: '250px',\n    height: '250px',\n    display: 'grid',\n    gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)'\n}\nconst Board = ({ squares, onClick }) => (\n    <div style={style}>\n        {squares.map((square, i) => (\n            <Square key={i} value={square} onClick={() => onClick(i)} />\n        ))}\n    </div>\n)\n\nexport default Board;","import React, { useState } from 'react';\nimport Board from './Board';\nimport { calculateWinner } from '../helpers';\n\nconst statusStyles = {\n    width: '200px',\n    margin: '20px auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n};\n\nconst containerStyles = {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column'\n}\n\nconst Game = () => {\n    const [board, setBoard] = useState(Array(9).fill(null));\n    const [xIsNext, setXisNext] = useState(true);\n    const winner = calculateWinner(board);\n\n    const handleClick = i => {\n        const boardCopy = [...board];\n        //If user clicks on ocupied square or if game is won\n        if (winner || boardCopy[i]) return;\n        //Put an X or an O on clicked square\n        boardCopy[i] = xIsNext ? 'X' : 'O';\n        setBoard(boardCopy);\n        setXisNext(!xIsNext);\n    }\n\n    const renderMoves = () => (\n        <button onClick={() => setBoard(Array(9).fill(null))}>\n            Start Game\n        </button>\n    )\n\n    return (\n        <div style={containerStyles}>\n            <Board squares={board} onClick={handleClick} />\n            <div style={statusStyles}>\n                <p>{winner ? 'Winner: ' + winner : 'Player ' + (xIsNext ? 'X' : 'O') + ' moves'}</p>\n                {winner ? renderMoves() : ''}\n            </div>\n        </div>\n    )\n}\nexport default Game;","export function calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n        if (!squares.includes(null)) {\n            return 'DRAW';\n        }\n    }\n    return null;\n}","import Game from './components/Game';\n\nconst App = () => <Game />\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}